import tkinter as tk
from tkinter import ttk
import subprocess

def validate_float(d):
    if d == "" or d.replace(".", "", 1).isdigit():  
        return True
    return False

def clear_other_entries(active_entry):
    if active_entry == order_entry:
        risk_entry.delete(0, tk.END)
    elif active_entry == risk_entry:
        order_entry.delete(0, tk.END)

def submit():
    global orders
    global risk
    if not order_entry.get() and not risk_entry.get():
        pass  # Do nothing
    elif order_entry.get():
        orders = order_entry.get()
        risk = 0
    elif risk_entry.get():
        orders = 0
        risk = risk_entry.get()
    print(f"Max number of orders: {orders}, Risk: {risk}%")
    with open('settings.txt', 'w') as file:
        file.write('{}\n'.format(orders))
        file.write('{}\n'.format(risk))
    file.close()

    subprocess.Popen(["python", "mt5_trading.py"])

global orders
global risk

with open('settings.txt', 'r') as file:
    orders = float(file.readline().strip())
    risk = float(file.readline().strip())
file.close()
print("Max number of orders is set to {} and risk is set to {}%".format(orders, risk))

# Create main application window
root = tk.Tk()
root.title("Trading Bot")
root.geometry("600x400")
root.configure(bg="bisque") #OrangeRed4

vflt = root.register(validate_float)
clr = root.register(clear_other_entries)

"""
I was trying to make the font and color look good but could not make it work - Shiv
# Style configuration for white text and button styling
style = ttk.Style()
style.configure("TLabel", foreground="white", background="black", font=("Arial", 10))
style.configure("TButton", foreground="white", background="gray", padding=5)
style.configure("TEntry", foreground="white", background="black")
"""

# Welcome Label
welcome_label = ttk.Label(root, text="Welcome to Trading Bot", font=("Cambria", 20, "bold"))
welcome_label.pack(pady=10)

# Information label
information_label = ttk.Label(root, text="This trading bot trades EURUSD stock only using Meta Trader 5 API")
information_label.pack()

current_value_label = ttk.Label(root, text="Max number of orders is set to {} and risk is set to {}%".format(orders,risk))
current_value_label.pack()

# Instruction Label
instruction_label = ttk.Label(root, text="Please enter the information below")
instruction_label.pack()

# Order Input
order_label = ttk.Label(root, text="Maximum number of orders")
order_label.pack()
order_entry = ttk.Entry(root, validate="key", validatecommand=(vflt, "%P"))
order_entry.pack()

# Risk Input
risk_label = ttk.Label(root, text="Maximum Risk: % (Write in percentage, maximum is 3%)")
risk_label.pack()
risk_entry = ttk.Entry(root, validate="key", validatecommand=(vflt, "%P"))
risk_entry.pack()

order_entry.bind("<Key>", lambda event: clear_other_entries(order_entry))
risk_entry.bind("<Key>", lambda event: clear_other_entries(risk_entry))

# Submit Button
submit_button = ttk.Button(root, text="SUBMIT", command=submit)
submit_button.pack(pady=10)

# Exit Button
exit_button = ttk.Button(root, text="EXIT", command=root.destroy)
exit_button.pack(pady=10)

# Run the application
root.mainloop()
